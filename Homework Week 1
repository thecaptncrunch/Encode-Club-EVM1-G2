// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;

contract HelloWorld {
    string private text;
    address public owner;

    modifier onlyOwner()
    {
        require (msg.sender == owner, "Caller is not the owner");
        _;
    }

    constructor() {
        text = "Hello World";
        owner = msg.sender;
    }

    function helloWorld() public view returns (string memory) {
        return text;
    }

Laurent
Report: 

    function setText(string calldata newText) public onlyOwner {
        text = newText;
    }

Layla
Report:

    function transferOwnership(address newOwner) public onlyOwner {
        owner = newOwner;
    }
}

Nia
Report: 

✅ This function runs successfully if the account address calling it is the owner of the contract. It will perform its 
    set function, ie., change the state variable "owner" to the submitted address by the current owner of the contract. 
❌ The function does not run if the contract address calling it (msg.sender) is not set as the owner of the HelloWorld contract.
    It will revert "Caller is not the owner" as set by the modifier of the contract. 
